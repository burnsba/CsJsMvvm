<#@ template language="C#4.5" hostspecific="true" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#+
	void SingleFile(string inputFile, string[] attributes)
	{
		int counter = 0;
		string line;
		bool lastLineWasEmpty = false;

		string strRegex = @"([\s]*)(public|protected|proected internal|internal|private) (.*) ([{].*get.*set.*[}])";
		Regex myRegex = new Regex(strRegex, RegexOptions.None);

		// Read the file and display it line by line.
		StreamReader file = new StreamReader(inputFile);
		while((line = file.ReadLine()) != null)
		{
			if (line.Length > 2)
			{
				if (line[0] == '/' && line[1] == '/')
				{
					continue;
				}
			}

			if (line == "\r" || line == "\n" || line == "\r\n" || line == "" || line.Length < 1 || line == "//")
			{
				if (lastLineWasEmpty)
				{
					continue;
				}
				lastLineWasEmpty = true;
			}
			else
			{
				lastLineWasEmpty = false;
			}

			Match match = myRegex.Match(line);
			if (match.Success && attributes.Length > 0)
			{
				attributes.ToList().ForEach(x => 
				{
					WriteLine(match.Groups["1"].Value + x);
				});
				WriteLine(match.Groups[0].Value);
			}
			else
			{
				WriteLine (line);
			}

		}

		file.Close();
	}
#>

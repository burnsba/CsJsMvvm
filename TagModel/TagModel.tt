<#@ template hostspecific="true" language="C#4.5" #>
<#@ include file="../SharedT4/SaveOutput.tt" #>
<#@ include file="SingleFile.tt" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#
	// config settings
	string inputDirectory = this.Host.ResolvePath(".");
	string outputDirectory = this.Host.ResolvePath(".");
	string[] attributes = new string[]
	{
		"[Required]",
		"[true]" 
	};

	try
	{
		DirectoryInfo directoryInfo = Directory.GetParent(inputDirectory);
		inputDirectory = Path.Combine(directoryInfo.FullName, "Database");
		outputDirectory = Path.Combine(outputDirectory, "Database");

		if (!Directory.Exists(inputDirectory))
		{
			throw new Exception("Something went wrong resolving directory path: " + inputDirectory);
		}
	}
	catch (Exception ex)
	{
		return "//" + ex.Message;
	}

	// done setting up script

	string[] fileEntries = Directory.GetFiles(inputDirectory);

    fileEntries.ToList().ForEach(x => 
	{
		if (Path.GetExtension(x) == ".cs")
		{
			#>
// <autogenerated>
// This code was generated by a tool. Any changes made manually will be lost
// the next time this code is regenerated.
// </autogenerated>
			<#
			SingleFile(x, attributes);
			SaveOutput(Path.Combine(outputDirectory, Path.GetFileName(x)));
		}
			
	});
#>

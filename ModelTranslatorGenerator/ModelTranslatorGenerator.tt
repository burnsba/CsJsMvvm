<#@ template hostspecific="true" language="C#" #>
<#@ include file="../SharedT4/SaveOutput.tt" #>
<#@ include file="SingleFile.tt" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)\ModelTranslator\bin\Debug\ModelTranslator.dll" #>
<#@ assembly name="$(SolutionDir)\Burnsba\bin\Burnsba.Data.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ import namespace="Burnsba.Data.Database" #>
<#
	/*
		This template is used to create partial views based on model classes.
	*/

	// config settings
	string outputDirectory = this.Host.ResolvePath(".");
	string editorFileNameFormat = "Partial_{0}_Editor.{1}";
	string extension = "cshtml";

	try
	{
		outputDirectory = Path.Combine(outputDirectory, "Views");
	}
	catch (Exception ex)
	{
		return "//" + ex.Message;
	}

	try
    {
		// done setting up script
		Reflection.GetPropertyTypesByAttributeTree<RequiresOwnExport, ExportToViewModel>(typeof(Document)).ToList().ForEach(x => 
		{
			// clear any text before this point (should just be whitespace)
			this.GenerationEnvironment.Remove(0, this.GenerationEnvironment.Length);
			WriteLine("@*");
#>
// <autogenerated>
// This code was generated by a tool. Any changes made manually will be lost
// the next time this code is regenerated.
// 
// Build date: <#Write(DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss \"GMT\"zzz") + "\r\n");#>
// </autogenerated>
<#
			WriteLine("*@");
	
			SingleFile(x);
			string outputName = String.Format(editorFileNameFormat, x.Name, extension);
			SaveOutput(Path.Combine(outputDirectory, outputName));

		});

	}
	catch (Exception ex)
    {
		string output = "/*\r\n" + this.GenerationEnvironment.ToString();
		output += "\r\nException: " + ex.Message;
		if (ex.InnerException != null)
        {
			output += "\r\n//inner: " + ex.InnerException.ToString();
        }
		return output + "\r\n*/";
    }
#>
